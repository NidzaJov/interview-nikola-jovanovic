version: '3'

services:
  mongo:
    image: mongo
    restart: always
    container_name: mongo
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    volumes: 
      - mongo_db:/data/db

  mongo-express:
    image: mongo-express
    restart: always
    container_name: mongo-express
    ports:
      - 8082:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: example
      ME_CONFIG_MONGODB_URL: mongodb://root:example@mongo:27017/

  caddy:
    image: caddy
    restart: unless-stopped
    ports:
      - "8080:80"
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile
    depends_on:
      - node-api
      - react-app

  node-api:
    build: 
      context: ./api
      args:
        NODE_ENV: development
    image: nidza81/node-api-image-dev
    container_name: node-api
    ports: 
      - "4000:4000"
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    volumes:
      - "./api:/api/"
      - "/api/node_modules"
    depends_on:
      - mongo
    command: "npm run dev"

  react-app:

    stdin_open: true
    tty: true
    build: 
      context: ./www
      dockerfile: ./Dockerfile.dev
    image: nidza81/react-app-image-dev
    container_name: react-app
    ports: 
      - "3000:3000"
    volumes:
      - "./www:/www/"
      - "/www/node_modules"

volumes:
  mongo_db:
  